version: '3.8'

services:
  # Service web principal
  datligent-web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: datligent-website
    restart: unless-stopped
    networks:
      - datligent-network
    volumes:
      - ./:/usr/share/nginx/html:ro
    environment:
      - VIRTUAL_HOST=servops.datligent.fr
      - LETSENCRYPT_HOST=servops.datligent.fr
      - LETSENCRYPT_EMAIL=contact@datligent.fr
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.datligent.rule=Host(`servops.datligent.fr`)"
      - "traefik.http.routers.datligent.tls=true"
      - "traefik.http.routers.datligent.tls.certresolver=letsencrypt"
      - "traefik.http.services.datligent.loadbalancer.server.port=80"

  # Reverse Proxy avec Traefik
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard Traefik (optionnel, à sécuriser en production)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - traefik-ssl-certs:/ssl-certs
    networks:
      - datligent-network
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL:-}
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN:-}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.servops.datligent.fr`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$2y$$10$$K1XHGz7HyLAaxlE8mRNZz.Nr6vUYdHfL6.r1S3NZhBo2CrB1Dx0Ey"

  # Monitoring avec Prometheus (optionnel)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - datligent-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`monitoring.servops.datligent.fr`)"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  # Dashboard Grafana (optionnel)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - datligent-network
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=datligent2025
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=dashboard.servops.datligent.fr
      - GF_SERVER_ROOT_URL=https://dashboard.servops.datligent.fr
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`dashboard.servops.datligent.fr`)"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  # Base de données pour les metrics (optionnel)
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    networks:
      - datligent-network
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=datligent2025
      - DOCKER_INFLUXDB_INIT_ORG=datligent
      - DOCKER_INFLUXDB_INIT_BUCKET=website-metrics

  # Service de sauvegarde automatique
  backup:
    image: alpine:latest
    container_name: backup-service
    restart: unless-stopped
    volumes:
      - ./:/app/website:ro
      - ./backups:/app/backups
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - datligent-network
    environment:
      - BACKUP_SCHEDULE=0 2 * * *  # Tous les jours à 2h du matin
    command: >
      sh -c "
        apk add --no-cache dcron docker-cli tar gzip &&
        echo '0 2 * * * cd /app && tar -czf /app/backups/backup-$(date +%Y%m%d-%H%M%S).tar.gz website/' | crontab - &&
        crond -f -l2
      "

volumes:
  traefik-ssl-certs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  influxdb-data:
    driver: local

networks:
  datligent-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16